/* =====================================================================
 *
 * Copyright (c) Sourceforge INFORMATION TECHNOLOGY All rights reserved.
 *
 * =====================================================================
 */

/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Fri Sep 23 14:18:06 CST 2005 by MyEclipse Hibernate Tool.
 */
package net.sourceforge.model.admin;

import java.io.Serializable;

import net.sourceforge.model.BaseAttachment;

/**
 * A class that represents a row in the hotel_contract table. You can customize
 * the behavior of this class by editing the class, {@link HotelContract()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractHotelContract extends BaseAttachment implements Serializable {

    /** The value of the tHotel association. */
    private Hotel hotel;

    /**
     * Simple constructor of AbstractHotelContract instances.
     */
    public AbstractHotelContract() {
    }

    /**
     * Constructor of AbstractHotelContract instances given a simple primary
     * key.
     * 
     * @param id
     */
    public AbstractHotelContract(Integer id) {
        this.setId(id);
    }

    /**
     * @return Returns the hotel.
     */
    public Hotel getHotel() {
        return hotel;
    }

    /**
     * @param hotel
     *            The hotel to set.
     */
    public void setHotel(Hotel hotel) {
        this.hotel = hotel;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the
     * primary key values.
     * 
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs) {
        if (rhs == null) return false;
        if (this == rhs) return true;
        if (!(rhs instanceof HotelContract)) return false;
        HotelContract that = (HotelContract) rhs;
        if (this.getId() != null) return this.getId().equals(that.getId());
        return that.getId() == null;
    }
}
