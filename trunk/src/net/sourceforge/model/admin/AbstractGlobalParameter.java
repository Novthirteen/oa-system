/* =====================================================================
 *
 * Copyright (c) Sourceforge INFORMATION TECHNOLOGY All rights reserved.
 *
 * =====================================================================
 */

/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Fri Sep 23 13:21:54 CST 2005 by MyEclipse Hibernate Tool.
 */
package net.sourceforge.model.admin;

import java.io.Serializable;

import net.sourceforge.model.metadata.YesNo;

/**
 * A class that represents a row in the global_para table. You can customize
 * the behavior of this class by editing the class, {@link GlobalParameter()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractGlobalParameter implements Serializable {
    /**
     * The cached hash code value for this instance. Settting to 0 triggers
     * re-calculation.
     */
    private int hashValue = 0;

    /** The composite primary key value. */
    private Integer id;

    /** The value of the simple smtpAddr property. */
    private String smtpAddress;

    /** The value of the simple smtpUsername property. */
    private String smtpUsername;

    /** The value of the simple smtpPassword property. */
    private String smtpPassword;

    /** The value of the simple minPasswordLength property. */
    private Integer minPasswordLength;

    /** The value of the simple passwordExpireDay property. */
    private Integer passwordExpireDay;

    /** The value of the simple accountLock property. */
    private Integer accountLock;

    private YesNo isLdapAuth;

    private String ldapServerName;

    private String ldapServerIp;

    private Integer ldapServerPort;

    private String ldapRootDN;

    private String ldapUserName;

    private String ldapPassword;

    private String ldapQuery;

    private String ldapFilter;

    /**
     * Simple constructor of AbstractGlobalParameter instances.
     */
    public AbstractGlobalParameter() {
    }

    /**
     * Constructor of AbstractGlobalParameter instances given a simple primary
     * key.
     * 
     * @param id
     */
    public AbstractGlobalParameter(Integer id) {
        this.setId(id);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * 
     * @return Integer
     */
    public Integer getId() {
        return id;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * 
     * @param id
     */
    public void setId(Integer id) {
        this.hashValue = 0;
        this.id = id;
    }

    /**
     * Return the value of the smtp_username column.
     * 
     * @return String
     */
    public String getSmtpUsername() {
        return this.smtpUsername;
    }

    /**
     * Set the value of the smtp_username column.
     * 
     * @param smtpUsername
     */
    public void setSmtpUsername(String smtpUsername) {
        this.smtpUsername = smtpUsername;
    }

    /**
     * Return the value of the smtp_password column.
     * 
     * @return String
     */
    public String getSmtpPassword() {
        return this.smtpPassword;
    }

    /**
     * Set the value of the smtp_password column.
     * 
     * @param smtpPassword
     */
    public void setSmtpPassword(String smtpPassword) {
        this.smtpPassword = smtpPassword;
    }

    public Integer getAccountLock() {
        return accountLock;
    }

    public void setAccountLock(Integer accountLock) {
        this.accountLock = accountLock;
    }

    public Integer getMinPasswordLength() {
        return minPasswordLength;
    }

    public void setMinPasswordLength(Integer minPasswordLength) {
        this.minPasswordLength = minPasswordLength;
    }

    public Integer getPasswordExpireDay() {
        return passwordExpireDay;
    }

    public void setPasswordExpireDay(Integer passwordExpireDay) {
        this.passwordExpireDay = passwordExpireDay;
    }

    public String getSmtpAddress() {
        return smtpAddress;
    }

    public void setSmtpAddress(String smtpAddress) {
        this.smtpAddress = smtpAddress;
    }

    /**
     * @return Returns the isLdapAuth.
     */
    public YesNo getIsLdapAuth() {
        return isLdapAuth;
    }

    /**
     * @param isLdapAuth
     *            The isLdapAuth to set.
     */
    public void setIsLdapAuth(YesNo isLdapAuth) {
        this.isLdapAuth = isLdapAuth;
    }

    /**
     * @return Returns the ldapFilter.
     */
    public String getLdapFilter() {
        return ldapFilter;
    }

    /**
     * @param ldapFilter
     *            The ldapFilter to set.
     */
    public void setLdapFilter(String ldapFilter) {
        this.ldapFilter = ldapFilter;
    }

    /**
     * @return Returns the ldapPassword.
     */
    public String getLdapPassword() {
        return ldapPassword;
    }

    /**
     * @param ldapPassword
     *            The ldapPassword to set.
     */
    public void setLdapPassword(String ldapPassword) {
        this.ldapPassword = ldapPassword;
    }

    /**
     * @return Returns the ldapQuery.
     */
    public String getLdapQuery() {
        return ldapQuery;
    }

    /**
     * @param ldapQuery
     *            The ldapQuery to set.
     */
    public void setLdapQuery(String ldapQuery) {
        this.ldapQuery = ldapQuery;
    }

    /**
     * @return Returns the ldapRootDN.
     */
    public String getLdapRootDN() {
        return ldapRootDN;
    }

    /**
     * @param ldapRootDN
     *            The ldapRootDN to set.
     */
    public void setLdapRootDN(String ldapRootDN) {
        this.ldapRootDN = ldapRootDN;
    }

    /**
     * @return Returns the ldapServerIp.
     */
    public String getLdapServerIp() {
        return ldapServerIp;
    }

    /**
     * @param ldapServerIp
     *            The ldapServerIp to set.
     */
    public void setLdapServerIp(String ldapServerIp) {
        this.ldapServerIp = ldapServerIp;
    }

    /**
     * @return Returns the ldapServerName.
     */
    public String getLdapServerName() {
        return ldapServerName;
    }

    /**
     * @param ldapServerName
     *            The ldapServerName to set.
     */
    public void setLdapServerName(String ldapServerName) {
        this.ldapServerName = ldapServerName;
    }

    /**
     * @return Returns the ldapServerPort.
     */
    public Integer getLdapServerPort() {
        return ldapServerPort;
    }

    /**
     * @param ldapServerPort
     *            The ldapServerPort to set.
     */
    public void setLdapServerPort(Integer ldapServerPort) {
        this.ldapServerPort = ldapServerPort;
    }

    /**
     * @return Returns the ldapUserName.
     */
    public String getLdapUserName() {
        return ldapUserName;
    }

    /**
     * @param ldapUserName
     *            The ldapUserName to set.
     */
    public void setLdapUserName(String ldapUserName) {
        this.ldapUserName = ldapUserName;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the
     * primary key values.
     * 
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs) {
        if (rhs == null)
            return false;
        if (this == rhs)
            return true;
        if (!(rhs instanceof GlobalParameter))
            return false;
        GlobalParameter that = (GlobalParameter) rhs;
        if (this.getId() != null)
            return this.getId().equals(that.getId());
        return that.getId() == null;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern
     * with the exception of array properties (these are very unlikely primary
     * key types).
     * 
     * @return int
     */
    public int hashCode() {
        if (this.hashValue == 0) {
            int result = 17;
            int idValue = this.getId() == null ? 0 : this.getId().hashCode();
            result = result * 37 + idValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
