/* =====================================================================
 *
 * Copyright (c) Sourceforge INFORMATION TECHNOLOGY All rights reserved.
 *
 * =====================================================================
 */

/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Fri Sep 23 15:42:38 CST 2005 by MyEclipse Hibernate Tool.
 */
package net.sourceforge.model.admin;

import java.io.Serializable;

import net.sourceforge.model.BaseAttachment;

/**
 * A class that represents a row in the supplier_contract table. You can
 * customize the behavior of this class by editing the class,
 * {@link SupplierContract()}. WARNING: DO NOT EDIT THIS FILE. This is a
 * generated file that is synchronized by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractSupplierContract extends BaseAttachment implements Serializable {
    /** The value of the tSupplier association. */
    private Supplier supplier;

    /**
     * Simple constructor of AbstractSupplierContract instances.
     */
    public AbstractSupplierContract() {
    }

    /**
     * Constructor of AbstractSupplierContract instances given a simple primary
     * key.
     * 
     * @param id
     */
    public AbstractSupplierContract(Integer id) {
        this.setId(id);
    }

    /**
     * @return Returns the supplier.
     */
    public Supplier getSupplier() {
        return supplier;
    }

    /**
     * @param supplier
     *            The supplier to set.
     */
    public void setSupplier(Supplier supplier) {
        this.supplier = supplier;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the
     * primary key values.
     * 
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs) {
        if (rhs == null) return false;
        if (this == rhs) return true;
        if (!(rhs instanceof SupplierContract)) return false;
        SupplierContract that = (SupplierContract) rhs;
        if (this.getId() != null) return this.getId().equals(that.getId());
        return that.getId() == null;
    }

}
