/* =====================================================================
 *
 * Copyright (c) Sourceforge INFORMATION TECHNOLOGY All rights reserved.
 *
 * =====================================================================
 */

/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Sep 22 15:04:41 CST 2005 by MyEclipse Hibernate Tool.
 */
package net.sourceforge.model.admin;

import java.io.Serializable;

import net.sourceforge.model.metadata.EnabledDisabled;
import net.sourceforge.model.metadata.YesNo;

/**
 * A class that represents a row in the site table. You can customize the
 * behavior of this class by editing the class, {@link Site()}. WARNING: DO NOT
 * EDIT THIS FILE. This is a generated file that is synchronized by MyEclipse
 * Hibernate tool integration.
 */
public abstract class AbstractSite implements Serializable {
    /**
     * The cached hash code value for this instance. Settting to 0 triggers
     * re-calculation.
     */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Integer id;

    private String name;
    
    private String activity;

    private YesNo canRecharge;

    private Integer prApprovalRemind;

    private Integer prPrepareRemind;

    private Integer poApprovalRemind;

    private Integer poConfirmRemind;

    private Integer expApprovalRemind;

    private Integer expConfirmRemind;

    private Integer traApprovalRemind;

    private Integer traConfirmRemind;

    private Integer poReceiveRemind;

    private EnabledDisabled enabled;

    private City city;

    private Currency baseCurrency;

    private User manager;

    /**
     * Simple constructor of AbstractSite instances.
     */
    public AbstractSite() {
    }

    /**
     * Constructor of AbstractSite instances given a simple primary key.
     * 
     * @param siteId
     */
    public AbstractSite(java.lang.Integer id) {
        this.setId(id);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * 
     * @return java.lang.Short
     */
    public java.lang.Integer getId() {
        return id;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * 
     * @param siteId
     */
    public void setId(java.lang.Integer id) {
        this.hashValue = 0;
        this.id = id;
    }

    public EnabledDisabled getEnabled() {
        return enabled;
    }

    public void setEnabled(EnabledDisabled enabled) {
        this.enabled = enabled;
    }

    public Integer getExpApprovalRemind() {
        return expApprovalRemind;
    }

    public void setExpApprovalRemind(Integer expApprovalRemind) {
        this.expApprovalRemind = expApprovalRemind;
    }

    public Integer getExpConfirmRemind() {
        return expConfirmRemind;
    }

    public void setExpConfirmRemind(Integer expConfirmRemind) {
        this.expConfirmRemind = expConfirmRemind;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getPoApprovalRemind() {
        return poApprovalRemind;
    }

    public void setPoApprovalRemind(Integer poApprovalRemind) {
        this.poApprovalRemind = poApprovalRemind;
    }

    public Integer getPoConfirmRemind() {
        return poConfirmRemind;
    }

    public void setPoConfirmRemind(Integer poConfirmRemind) {
        this.poConfirmRemind = poConfirmRemind;
    }

    public Integer getPoReceiveRemind() {
        return poReceiveRemind;
    }

    public void setPoReceiveRemind(Integer poReceiveRemind) {
        this.poReceiveRemind = poReceiveRemind;
    }

    public Integer getPrApprovalRemind() {
        return prApprovalRemind;
    }

    public void setPrApprovalRemind(Integer prApprovalRemind) {
        this.prApprovalRemind = prApprovalRemind;
    }

    public Integer getPrPrepareRemind() {
        return prPrepareRemind;
    }

    public void setPrPrepareRemind(Integer prPrepareRemind) {
        this.prPrepareRemind = prPrepareRemind;
    }

    public YesNo getCanRecharge() {
        return canRecharge;
    }

    public void setCanRecharge(YesNo canRecharge) {
        this.canRecharge = canRecharge;
    }

    public Integer getTraApprovalRemind() {
        return traApprovalRemind;
    }

    public void setTraApprovalRemind(Integer traApprovalRemind) {
        this.traApprovalRemind = traApprovalRemind;
    }

    public Integer getTraConfirmRemind() {
        return traConfirmRemind;
    }

    public void setTraConfirmRemind(Integer traConfirmRemind) {
        this.traConfirmRemind = traConfirmRemind;
    }

    public City getCity() {
        return city;
    }

    public void setCity(City city) {
        this.city = city;
    }

    public Currency getBaseCurrency() {
        return baseCurrency;
    }

    public void setBaseCurrency(Currency baseCurrency) {
        this.baseCurrency = baseCurrency;
    }

    public User getManager() {
        return manager;
    }

    public void setManager(User manager) {
        this.manager = manager;
    }

    /**
     * @return Returns the activity.
     */
    public String getActivity() {
        return activity;
    }

    /**
     * @param activity The activity to set.
     */
    public void setActivity(String activity) {
        this.activity = activity;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the
     * primary key values.
     * 
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs) {
        if (rhs == null)
            return false;
        if (this == rhs)
            return true;
        if (!(rhs instanceof Site))
            return false;
        Site that = (Site) rhs;
        if (this.getId() != null)
            return this.getId().equals(that.getId());
        return that.getId() == null;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern
     * with the exception of array properties (these are very unlikely primary
     * key types).
     * 
     * @return int
     */
    public int hashCode() {
        if (this.hashValue == 0) {
            int result = 17;
            int siteIdValue = this.getId() == null ? 0 : this.getId().hashCode();
            result = result * 37 + siteIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
