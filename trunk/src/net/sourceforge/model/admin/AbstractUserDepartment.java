/* =====================================================================
 *
 * Copyright (c) Sourceforge INFORMATION TECHNOLOGY All rights reserved.
 *
 * =====================================================================
 */

/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Fri Sep 23 18:06:30 CST 2005 by MyEclipse Hibernate Tool.
 */
package net.sourceforge.model.admin;

import java.io.Serializable;

/**
 * A class that represents a row in the t_user_dep table. You can customize the
 * behavior of this class by editing the class, {@link UserDepartment()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractUserDepartment implements Serializable {
    /**
     * The cached hash code value for this instance. Settting to 0 triggers
     * re-calculation.
     */
    private int hashValue = 0;

    private Department department;

    /** The value of the user_id component of this composite id. */
    private User user;
    
    private String title;

    /**
     * Simple constructor of AbstractUserDepartment instances.
     */
    public AbstractUserDepartment() {
    }

    /**
     * Constructor of AbstractUserDepartment instances given a composite primary key.
     * 
     * @param id
     */
    public AbstractUserDepartment(User user, Department department) {
        this.setUser(user);
        this.setDepartment(department);
    }

    /**
     * @return Returns the department.
     */
    public Department getDepartment() {
        return department;
    }

    /**
     * @param department
     *            The department to set.
     */
    public void setDepartment(Department department) {
        this.hashValue = 0;
        this.department = department;
    }

    /**
     * @return Returns the user.
     */
    public User getUser() {
        return user;
    }

    /**
     * @param user
     *            The user to set.
     */
    public void setUser(User user) {
        this.hashValue = 0;
        this.user = user;
    }

    
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the
     * primary key values.
     * 
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs) {
        if (rhs == null) return false;
        if (this == rhs) return true;
        if (!(rhs instanceof UserDepartment)) return false;
        UserDepartment that = (UserDepartment) rhs;
        if (this.getDepartment() == null || that.getDepartment() == null) {
            return false;
        }
        if (!this.getDepartment().equals(that.getDepartment())) {
            return false;
        }
        if (this.getUser() == null || that.getUser() == null) {
            return false;
        }
        if (!this.getUser().equals(that.getUser())) {
            return false;
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern
     * with the exception of array properties (these are very unlikely primary
     * key types).
     * 
     * @return int
     */
    public int hashCode() {
        if (this.hashValue == 0) {
            int result = 17;
            int tDepartmentValue = this.getDepartment() == null ? 0 : this.getDepartment().hashCode();
            result = result * 37 + tDepartmentValue;
            int tUserValue = this.getUser() == null ? 0 : this.getUser().hashCode();
            result = result * 37 + tUserValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
