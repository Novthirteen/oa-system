/* =====================================================================
 *
 * Copyright (c) Sourceforge INFORMATION TECHNOLOGY All rights reserved.
 *
 * =====================================================================
 */

/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Fri Sep 23 14:50:05 CST 2005 by MyEclipse Hibernate Tool.
 */
package net.sourceforge.model.admin;

import java.io.Serializable;

import net.sourceforge.model.metadata.EnabledDisabled;

/**
 * A class that represents a row in the t_pur_type table. 
 * You can customize the behavior of this class by editing the class, {@link TPurType()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractPurchaseType 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.String code;

    /** The value of the tSite association. */
    private Site site;

    /** The value of the simple description property. */
    private java.lang.String description;

    /** The value of the simple enabled property. */
    private EnabledDisabled enabled;

    /**
     * Simple constructor of AbstractTPurType instances.
     */
    public AbstractPurchaseType()
    {
    }

    /**
     * Constructor of AbstractTPurType instances given a simple primary key.
     * @param purTypeCode
     */
    public AbstractPurchaseType(java.lang.String code)
    {
        this.setCode(code);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.String
     */
    public java.lang.String getCode()
    {
        return code;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param code
     */
    public void setCode(java.lang.String code)
    {
        this.hashValue = 0;
        this.code = code;
    }

    /**
     * Return the value of the description column.
     * @return java.lang.String
     */
    public java.lang.String getDescription()
    {
        return this.description;
    }

    /**
     * Set the value of the description column.
     * @param description
     */
    public void setDescription(java.lang.String description)
    {
        this.description = description;
    }

    
    /**
	 * @return Returns the enabled.
	 */
	public EnabledDisabled getEnabled() {
		return enabled;
	}

	/**
	 * @param enabled The enabled to set.
	 */
	public void setEnabled(EnabledDisabled enabled) {
		this.enabled = enabled;
	}

	/**
	 * @return Returns the site.
	 */
	public Site getSite() {
		return site;
	}

	/**
	 * @param site The site to set.
	 */
	public void setSite(Site site) {
		this.site = site;
	}

	/**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
    	if (rhs == null) return false;
        if (this == rhs) return true;
        if (!(rhs instanceof PurchaseType)) return false;
        PurchaseType that = (PurchaseType) rhs;
        if (this.getCode() != null) return this.getCode().equals(that.getCode());
        return that.getCode() == null;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int purTypeCodeValue = this.getCode() == null ? 0 : this.getCode().hashCode();
            result = result * 37 + purTypeCodeValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
