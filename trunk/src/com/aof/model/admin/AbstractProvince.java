/* =====================================================================
 *
 * Copyright (c) Atos Origin INFORMATION TECHNOLOGY All rights reserved.
 *
 * =====================================================================
 */

/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Fri Sep 23 13:47:16 CST 2005 by MyEclipse Hibernate Tool.
 */
package com.aof.model.admin;

import java.io.Serializable;

import com.aof.model.metadata.EnabledDisabled;

/**
 * A class that represents a row in the t_province table. 
 * You can customize the behavior of this class by editing the class, {@link TProvince()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractProvince 
    implements Serializable
{
    private Site site;
	
	/** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Integer id;

    /** The value of the tCountry association. */
    private Country country;

    /** The value of the simple engName property. */
    private java.lang.String engName;

    /** The value of the simple chnName property. */
    private java.lang.String chnName;

    /** The value of the simple enabled property. */
    private EnabledDisabled enabled;

    /**
     * Simple constructor of AbstractTProvince instances.
     */
    public AbstractProvince()
    {
    }

    /**
     * Constructor of AbstractTProvince instances given a simple primary key.
     * @param id
     */
    public AbstractProvince(java.lang.Integer id)
    {
        this.setId(id);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Short
     */
    public java.lang.Integer getId()
    {
        return id;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param id
     */
    public void setId(java.lang.Integer id)
    {
        this.hashValue = 0;
        this.id = id;
    }

    /**
     * Return the value of the country_id column.
     * @return TCountry
     */
    public Country getCountry()
    {
        return this.country;
    }

    /**
     * Set the value of the country_id column.
     * @param tCountry
     */
    public void setCountry(Country country)
    {
        this.country = country;
    }

    /**
     * Return the value of the eng_name column.
     * @return java.lang.String
     */
    public java.lang.String getEngName()
    {
        return this.engName;
    }

    /**
     * Set the value of the eng_name column.
     * @param engName
     */
    public void setEngName(java.lang.String engName)
    {
        this.engName = engName;
    }

    /**
     * Return the value of the chn_name column.
     * @return java.lang.String
     */
    public java.lang.String getChnName()
    {
        return this.chnName;
    }

    /**
     * Set the value of the chn_name column.
     * @param chnName
     */
    public void setChnName(java.lang.String chnName)
    {
        this.chnName = chnName;
    }

    

    public EnabledDisabled getEnabled() {
		return enabled;
	}

	public void setEnabled(EnabledDisabled enabled) {
		this.enabled = enabled;
	}

	
    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
    	if (rhs == null) return false;
        if (this == rhs) return true;
        if (!(rhs instanceof Province)) return false;
        Province that = (Province) rhs;
        if (this.getId() != null) return this.getId().equals(that.getId());
        return that.getId() == null;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int provinceIdValue = this.getId() == null ? 0 : this.getId().hashCode();
            result = result * 37 + provinceIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }

	public Site getSite() {
		return site;
	}

	public void setSite(Site site) {
		this.site = site;
	}
}
