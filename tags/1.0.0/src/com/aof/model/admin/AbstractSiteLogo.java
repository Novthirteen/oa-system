/* =====================================================================
 *
 * Copyright (c) Atos Origin INFORMATION TECHNOLOGY All rights reserved.
 *
 * =====================================================================
 */

/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Sep 22 15:04:41 CST 2005 by MyEclipse Hibernate Tool.
 */
package com.aof.model.admin;

import java.io.Serializable;
import java.sql.Blob;

/**
 * A class that represents a row in the t_site table (only site_logo field). You
 * can customize the behavior of this class by editing the class,
 * {@link SiteLogo()}. WARNING: DO NOT EDIT THIS FILE. This is a generated file
 * that is synchronized by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractSiteLogo implements Serializable {
    /**
     * The cached hash code value for this instance. Settting to 0 triggers
     * re-calculation.
     */
    private int hashValue = 0;

    /** The composite primary key value. */
    private Integer id;

    private Blob logo;

    /**
     * Simple constructor of AbstractSiteLogo instances.
     */
    public AbstractSiteLogo() {
    }

    /**
     * Constructor of AbstractSiteLogo instances given a simple primary key.
     * 
     * @param siteId
     */
    public AbstractSiteLogo(java.lang.Integer id) {
        this.setId(id);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * 
     * @return Integer
     */
    public Integer getId() {
        return id;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * 
     * @param siteId
     */
    public void setId(Integer id) {
        this.hashValue = 0;
        this.id = id;
    }

    public Blob getLogo() {
        return logo;
    }

    public void setLogo(Blob logo) {
        this.logo = logo;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the
     * primary key values.
     * 
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs) {
        if (rhs == null)
            return false;
        if (this == rhs)
            return true;
        if (!(rhs instanceof SiteLogo))
            return false;
        SiteLogo that = (SiteLogo) rhs;
        if (this.getId() != null)
            return this.getId().equals(that.getId());
        return that.getId() == null;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern
     * with the exception of array properties (these are very unlikely primary
     * key types).
     * 
     * @return int
     */
    public int hashCode() {
        if (this.hashValue == 0) {
            int result = 17;
            int siteIdValue = this.getId() == null ? 0 : this.getId().hashCode();
            result = result * 37 + siteIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
